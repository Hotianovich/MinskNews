@using System.Text;
@using MinskNews.Models;
@model PageListViewModel<News>

@{
    var result = new StringBuilder();

    // стрелка влево
    var liPrevNext = new TagBuilder("li");
    liPrevNext.InnerHtml = Ajax.ActionLink("<<", "Index", new { page = Model.CurrentPage - 1 }, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "List" }).ToString();
    if (Model.CurrentPage != 1)
    {
        liPrevNext.InnerHtml = Ajax.ActionLink("<<", "Index", new { page = Model.CurrentPage - 1 }, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "List" }).ToString();
        result.Append(liPrevNext.ToString());
    }

    //page
    for (int i = 1; i <= Model.TotalPage; i++)
    {
        var li = new TagBuilder("li");

        if (i == Model.CurrentPage)
        {
            li.AddCssClass("active");
        }

        li.InnerHtml = Ajax.RouteLink(i.ToString(), new { action = "Index", page = i }, new AjaxOptions { UpdateTargetId = "List", InsertionMode = InsertionMode.Replace }).ToString();

        result.Append(li.ToString());

    }

    //стрелка в право
    if (Model.CurrentPage != Model.TotalPage)
    {
        liPrevNext = new TagBuilder("li");
        liPrevNext.InnerHtml = Ajax.ActionLink(">>", "Index", new { page = Model.CurrentPage + 1 }, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "List" }).ToString();
        result.Append(liPrevNext.ToString());
    }

}
<ul class="pagination">
    @MvcHtmlString.Create(result.ToString())
</ul>
